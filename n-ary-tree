class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        // Corner case
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;
        
        Queue<Node> q = new LinkedList<>();
        q.offer(root);
        
        // Traverse the N-ary Tree by level
        while(!q.isEmpty()) {
            int size = q.size();
            List<Integer> layer = new ArrayList<>();
            
            for(int i = 0; i < size; i++) {
                Node node = q.poll();
                layer.add(node.val);
                
                for(Node child : node.children) {
                    q.offer(child);
                }
            }
            
            ans.add(layer);
        }
        
        return ans;
    }
}
