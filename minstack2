//design 2
class MinStack {
    Stack<Integer> stack;
    // Stack<Integer> minstack;
    /** initialize your data structure here. */
    public MinStack() {
        this.stack=new Stack<Integer>();
        // this.minstack=new Stack<Integer>();
    }
    
    public void push(int val) {
        stack.push(val);
        // minstack.push(val);
    }
    
    public void pop() {
        System.out.println(stack.pop());
        // minstack.pop();
    }
    
    public int top() {
        return stack.peek();
    }
    
    public int getMin() {
        int small=stack.peek();
        Iterator value = stack.iterator();
        while (value.hasNext()) {
            int i=(Integer)value.next();
            if(i<=small)
            {
                small=i;
            }
        }
        return small;
    }
}

/**
while (value.hasNext()) {
            System.out.println(value.next());
        }
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
