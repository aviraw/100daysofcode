//recursive approach
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> a=new ArrayList<>();
        if(root==null)return a;
        helper(root,a);
        return a;
    }
    public void helper(TreeNode root, List<Integer> a)
    {
            if(root.left!=null)
            helper(root.left,a);
            a.add(root.val);
            if(root.right!=null)
            helper(root.right,a);
    }
}
//iterative approach
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> out=new ArrayList<>();
        Stack<TreeNode> st=new Stack<>();
        if(root==null) return out;
        TreeNode cur=root;
        while(cur!=null || !st.isEmpty()){
            while(cur!=null){
                st.push(cur);
                cur=cur.left;
            }
            cur=st.pop();
            out.add(cur.val);
            cur=cur.right;
        }
        return out;
    }
}
