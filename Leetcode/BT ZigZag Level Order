/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> p = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if(root==null) return p;
        q.add(root);
        boolean rev=false;
        while(!q.isEmpty())
        {
            List<Integer> l = new ArrayList<>();
            int f=q.size();
            for(int i=0;i<f;i++)
            {
                TreeNode current = q.poll();
                l.add(current.val);
                if(current.left!=null)
                {
                    q.add(current.left);
                }
                if(current.right!=null)
                {
                    q.add(current.right);
                }
            }
            if(rev){
                Collections.reverse(l);
            }
            p.add(l);
            rev = !rev;
        }
        return p;
    }
}
